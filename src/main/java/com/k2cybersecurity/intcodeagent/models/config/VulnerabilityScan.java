
package com.k2cybersecurity.intcodeagent.models.config;

import com.fasterxml.jackson.annotation.*;
import com.k2cybersecurity.intcodeagent.websocket.JsonConverter;

import java.util.HashMap;
import java.util.Map;

@JsonInclude(JsonInclude.Include.NON_NULL)
@JsonPropertyOrder({
        "enabled",
        "cveScan",
        "iastScan",
        "enableHooks"
})
public class VulnerabilityScan {

    @JsonProperty("enabled")
    private Boolean enabled = false;
    @JsonProperty("cveScan")
    private CVEScan cveScan = new CVEScan();
    @JsonProperty("iastScan")
    private IASTScan iastScan = new IASTScan();
    @JsonProperty("enableHooks")
    private Boolean enableHooks = false;
    @JsonIgnore
    private Map<String, Object> additionalProperties = new HashMap<String, Object>();

    /**
     * No args constructor for use in serialization
     */
    public VulnerabilityScan() {
    }

    /**
     * @param enableHooks
     * @param cveScan
     * @param enabled
     * @param iastScan
     */
    public VulnerabilityScan(Boolean enabled, CVEScan cveScan, IASTScan iastScan, Boolean enableHooks) {
        super();
        this.enabled = enabled;
        this.cveScan = cveScan;
        this.iastScan = iastScan;
        this.enableHooks = enableHooks;
    }

    @JsonProperty("enabled")
    public Boolean getEnabled() {
        return enabled;
    }

    @JsonProperty("enabled")
    public void setEnabled(Boolean enabled) {
        this.enabled = enabled;
    }

    @JsonProperty("cveScan")
    public CVEScan getCveScan() {
        return cveScan;
    }

    @JsonProperty("cveScan")
    public void setCveScan(CVEScan cveScan) {
        this.cveScan = cveScan;
    }

    @JsonProperty("iastScan")
    public IASTScan getIastScan() {
        return iastScan;
    }

    @JsonProperty("iastScan")
    public void setIastScan(IASTScan iastScan) {
        this.iastScan = iastScan;
    }

    @JsonProperty("enableHooks")
    public Boolean getEnableHooks() {
        return enableHooks;
    }

    @JsonProperty("enableHooks")
    public void setEnableHooks(Boolean enableHooks) {
        this.enableHooks = enableHooks;
    }

    @JsonAnyGetter
    public Map<String, Object> getAdditionalProperties() {
        return this.additionalProperties;
    }

    @JsonAnySetter
    public void setAdditionalProperty(String name, Object value) {
        this.additionalProperties.put(name, value);
    }

    @Override
    public String toString() {
        return JsonConverter.toJSON(this);
    }

}
